synchronized锁:由对象头中的Mark Word根据锁标志位的不同而被复用及锁升级策略

1.锁升级(结合锁升级.png)
偏向锁:MarkWord存储的是偏向的线程ID
轻量锁:MarkWord存储的是指向线程栈中Lock Record的指针
重量锁:MarkWord存储的是指向堆中的monitor对象的指针

2.偏向锁
当一段同步代码一直被同一个线程多次访问,由于只有一个线程那么该线程在后续访问时便会自动获得锁
JVM不用和操作系统协商设置Mutex(争取内核),它只需要记录下线程ID就标示自己获得了当前锁,不用操作系统接入。
上述就是偏向锁：在没有其他线程竞争的时候,一直偏向偏心当前线程，当前线程可以一直执行。