public class CompletableFuture<T> implements Future<T>, CompletionStage<T> {}

CompletionStage接口:
- 代表异步计算过程中的某一个阶段,一个阶段完成以后可能会触发另外一个阶段
- 一个阶段的计算执行可以是一个Function,Consumer或者Runnable
- 一个阶段的执行能使被单个阶段的完成触发,也可能是由多个阶段一起触发

四大静态方法:
runAsync(无返回值)
    - public static CompletableFuture<Void> runAsync(Runnable runnable)
    - public static CompletableFuture<Void> runAsync(Runnable runnable,Executor executor)
supplyAsync(有返回值)
    - public static <U> CompletableFuture<U> supplyAsync(Supplier<U> supplier)
    - public static <U> CompletableFuture<U> supplyAsync(Supplier<U> supplier,Executor executor)
如果没有指定Executor,直接使用ForkJoinPool.commonPool()作为他的线程池执行异步代码