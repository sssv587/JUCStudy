JUC基础

1.进程和线程
进程：指在系统中正在运行的一个应用程序；程序一旦运行就是进程；进程——资源分配的最小单位
线程：系统分配处理器时间资源的基本单元，或者说进程之内独立执行的一个单元执行流。线程——程序执行的最小单位

2.wait/sleep 的区别
1)sleep 是 Thread 的静态方法，wait 是 Object 的方法，任何对象实例都能调用
2)sleep 不会释放锁，它也不需要占用锁。wait 会释放锁，但调用它的前提是当前线程占有锁(即代码要在 synchronized 中)
3)它们都可以被 interrupted 方法中断

3.并发与并行
并发：同一时刻多个线程在访问同一个资源，多个线程对一个点
    例子：春运抢票 电商秒杀...
并行：多项工作一起执行，之后再汇总
    例子：泡方便面，电水壶烧水，一边撕调料倒入桶中

4.Lock与synchronized区别
1)Lock是一个接口,而synchronized是Java中的关键字,synchronized是内置的语言实现
2)synchronized在发生异常时,会自动释放线程占有的锁,因此不会导致死锁现象发生;而Lock在发生异常时,如果没有主动通过unlock()去释放锁,则很可能造成死锁现象,因此使用Lock时需在finally块中释放锁
3)Lock可以让等待锁的线程响应中断,而synchronized却不行,使用synchronized时,等待的线程会一直等待下去,不能够响应中断
4)通过 Lock 可以知道有没有成功获取锁，而 synchronized 却无法办到
5)Lock 可以提高多个线程进行读操作的效率

5.线程间通信
wait、notify、notifyAll
线程间定制化通信:lock.ThreadDemo3.java

6.集合的线程安全(ArrayList)
1)使用Vector集合
2)使用Collections解决:List<String> list = Collections.synchronizedList(new ArrayList<>());
3)